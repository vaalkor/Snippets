aws eks --region eu-west-1 update-kubeconfig --name transient //using aws cli to add the new aws context to your kubeconfig. 

>> KUBECTL

kubectl config current-context
kubectl config get-contexts
kubectl config use-context [cluster name]

kubectl get events -n [namespace name]
kubectl describe pods <podname> -n <namespace>

// Shell into a running container...
kubectl exec --stdin --tty shell-demo -- /bin/bash 

//alpine based linux has ash not bash
kubectl exec --stdin --tty nginxtest -- /bin/ash 

//Run this to get a super small alpine nginx image running so you can debug connections in a cluseter. (I'm using nginx just because nginx gets up and running so the container keeps running. There's plenty of other ways u could do it)...
kubectl run nginxtest --image=sdelrio/docker-minimal-nginx --command=true -- "/bin/ash" "-c" "apk add curl; nginx -g 'daemon off;'" 

//Proxy localhost to a resource in the cluster (works for services and some other things i believe.)
kubectl port-forward pods/podname 9000:9000 -n pod_name


// get pods in a namespace
kubectl get pods -n namespace

// get all objects of a particular resource type...
kubectl get pods 

// get all resources...
kubectl get all 

// Create new objects in the cluster based on a yaml file. --save-config saves some metadata so you can apply later
kubectl create -f filename.yaml --save-config. 

// Apply the changes to an existing config only create what's needed. You can actually just apply instead of create. It's a better idea. Don't use create...
kubectl apply -f filename.yaml 

// You can use this to delete evicted pods pretty quickly
kubectl delete pods --field-selector=status.phase=Failed -n some-namespace

//There does't seem to be wildcards here unfortunately. For that I guess you'd have to use jsonpath filters
kubectl get pods -o=jsonpath='{.items[0]}'

//But if you need to easily delete ALL of everything then you can just use != like so
kubectl delete pods --field-selector=status.phase!=potatoes -n some-namespace

//Force delete a pod. Can be useful for pods stuck in terminating state.
kubectl delete pod -n pulsar --grace-period=0 --force <pod_name>